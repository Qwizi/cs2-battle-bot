{
    "openapi": "3.0.3",
    "info": {
        "title": "",
        "version": ""
    },
    "paths": {
        "/api/account-connect-link": {
            "get": {
                "operationId": "account_connect_link_retrieve",
                "tags": [
                    "account-connect-link"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountConnectLinkRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountConnectLink"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/discord-users/": {
            "get": {
                "operationId": "discord_users_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUsersListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDiscordUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "discord_users_create",
                "tags": [
                    "discord-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUsersCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/discord-users/{id}/": {
            "get": {
                "operationId": "discord_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUsersRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "discord_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUsersUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "discord_users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDiscordUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUsersPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "discord_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this discord user.",
                        "required": true
                    }
                ],
                "tags": [
                    "discord-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscordUsersDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/guilds/": {
            "get": {
                "operationId": "guilds_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGuildList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "guilds_create",
                "tags": [
                    "guilds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateGuild"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildsCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/guilds/{guild_id}/": {
            "get": {
                "operationId": "guilds_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "guilds_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGuild"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildsUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "guilds_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGuild"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildsPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guild"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "guilds_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "guild_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "guilds"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildsDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/maps/": {
            "get": {
                "operationId": "maps_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "maps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MapsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMapList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "maps_create",
                "tags": [
                    "maps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MapsCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/maps/{id}/": {
            "get": {
                "operationId": "maps_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MapsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "maps_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Map"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MapsUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "maps_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMap"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MapsPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Map"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "maps_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this map.",
                        "required": true
                    }
                ],
                "tags": [
                    "maps"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MapsDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/matches/": {
            "get": {
                "operationId": "matches_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMatchList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "matches_create",
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMatch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/": {
            "get": {
                "operationId": "matches_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "matches_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "matches_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMatch"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "matches_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/matches/{id}/ban/": {
            "post": {
                "operationId": "matches_ban_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchBanMap"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesBanCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchBanMapResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/bans/": {
            "get": {
                "operationId": "matches_bans_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesBansListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMapBanList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/captain/": {
            "post": {
                "operationId": "matches_captain_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchSelectCaptain"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesCaptainCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/config/": {
            "get": {
                "operationId": "matches_config_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesConfigRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchConfig"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/join/": {
            "post": {
                "operationId": "matches_join_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchPlayerJoin"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesJoinCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/leave/": {
            "post": {
                "operationId": "matches_leave_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchPlayerLeave"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesLeaveCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/load/": {
            "post": {
                "operationId": "matches_load_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesLoadCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/pick/": {
            "post": {
                "operationId": "matches_pick_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MatchPickMap"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesPickCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchPickMapResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/picks/": {
            "get": {
                "operationId": "matches_picks_list",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "matches"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesPicksListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMatchMapSelectedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/recreate/": {
            "post": {
                "operationId": "matches_recreate_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesRecreateCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/shuffle/": {
            "post": {
                "operationId": "matches_shuffle_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InteractionUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesShuffleCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/matches/{id}/webhook/": {
            "post": {
                "operationId": "matches_webhook_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this match.",
                        "required": true
                    }
                ],
                "tags": [
                    "matches"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Match"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MatchesWebhookCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Match"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/players/": {
            "get": {
                "operationId": "players_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "players"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayersListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPlayerList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "players_create",
                "tags": [
                    "players"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayersCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/players/{id}/": {
            "get": {
                "operationId": "players_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayersRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "players_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Player"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayersUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "players_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPlayer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayersPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Player"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "players_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this player.",
                        "required": true
                    }
                ],
                "tags": [
                    "players"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlayersDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/schema/": {
            "get": {
                "operationId": "schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "ug",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "schema"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaRetrieveErrorResponse400"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SchemaRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/servers/": {
            "get": {
                "operationId": "servers_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "guild_or_public",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedServerList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "servers_create",
                "tags": [
                    "servers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Server"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/servers/{id}/": {
            "get": {
                "operationId": "servers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "servers_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Server"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "servers_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "servers_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/servers/{id}/join/": {
            "get": {
                "operationId": "servers_join_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this server.",
                        "required": true
                    }
                ],
                "tags": [
                    "servers"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {}
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServersJoinRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Server"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/steam-users/": {
            "get": {
                "operationId": "steam_users_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUsersListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSteamUserList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "steam_users_create",
                "tags": [
                    "steam-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUsersCreateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/steam-users/{id}/": {
            "get": {
                "operationId": "steam_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUsersRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "steam_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUsersUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "steam_users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSteamUser"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUsersPartialUpdateErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUser"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "steam_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this steam user.",
                        "required": true
                    }
                ],
                "tags": [
                    "steam-users"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SteamUsersDestroyErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/teams/": {
            "get": {
                "operationId": "teams_list",
                "parameters": [
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamsListErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTeamList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/teams/{id}/": {
            "get": {
                "operationId": "teams_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A unique value identifying this team.",
                        "required": true
                    }
                ],
                "tags": [
                    "teams"
                ],
                "security": [
                    {
                        "tokenAuth": []
                    }
                ],
                "responses": {
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamsRetrieveErrorResponse400"
                                }
                            }
                        },
                        "description": ""
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse401"
                                },
                                "examples": {
                                    "AuthenticationFailed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "authentication_failed",
                                                    "detail": "Incorrect authentication credentials.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    },
                                    "NotAuthenticated": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_authenticated",
                                                    "detail": "Authentication credentials were not provided.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse403"
                                },
                                "examples": {
                                    "PermissionDenied": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "permission_denied",
                                                    "detail": "You do not have permission to perform this action.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse404"
                                },
                                "examples": {
                                    "NotFound": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_found",
                                                    "detail": "Not found.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse405"
                                },
                                "examples": {
                                    "MethodNotAllowed": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "method_not_allowed",
                                                    "detail": "Method \"get\" not allowed.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse406"
                                },
                                "examples": {
                                    "NotAcceptable": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "not_acceptable",
                                                    "detail": "Could not satisfy the request Accept header.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse415"
                                },
                                "examples": {
                                    "UnsupportedMediaType": {
                                        "value": {
                                            "type": "client_error",
                                            "errors": [
                                                {
                                                    "code": "unsupported_media_type",
                                                    "detail": "Unsupported media type \"application/json\" in request.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse500"
                                },
                                "examples": {
                                    "APIException": {
                                        "value": {
                                            "type": "server_error",
                                            "errors": [
                                                {
                                                    "code": "error",
                                                    "detail": "A server error occurred.",
                                                    "attr": null
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountConnectLink": {
                "type": "object",
                "properties": {
                    "link": {
                        "type": "string"
                    }
                },
                "required": [
                    "link"
                ]
            },
            "AccountConnectLinkRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "Attr02cEnum": {
                "enum": [
                    "steam_user.avatar"
                ],
                "type": "string",
                "description": "* `steam_user.avatar` - steam_user.avatar"
            },
            "Attr080Enum": {
                "enum": [
                    "password"
                ],
                "type": "string",
                "description": "* `password` - password"
            },
            "Attr0a3Enum": {
                "enum": [
                    "port"
                ],
                "type": "string",
                "description": "* `port` - port"
            },
            "Attr12fEnum": {
                "enum": [
                    "user_id"
                ],
                "type": "string",
                "description": "* `user_id` - user_id"
            },
            "Attr131Enum": {
                "enum": [
                    "tag"
                ],
                "type": "string",
                "description": "* `tag` - tag"
            },
            "Attr14cEnum": {
                "enum": [
                    "steamid64"
                ],
                "type": "string",
                "description": "* `steamid64` - steamid64"
            },
            "Attr160Enum": {
                "enum": [
                    "team2_channel"
                ],
                "type": "string",
                "description": "* `team2_channel` - team2_channel"
            },
            "Attr247Enum": {
                "enum": [
                    "team"
                ],
                "type": "string",
                "description": "* `team` - team"
            },
            "Attr2b6Enum": {
                "enum": [
                    "steamid32"
                ],
                "type": "string",
                "description": "* `steamid32` - steamid32"
            },
            "Attr314Enum": {
                "enum": [
                    "steam_user.non_field_errors"
                ],
                "type": "string",
                "description": "* `steam_user.non_field_errors` - steam_user.non_field_errors"
            },
            "Attr383Enum": {
                "enum": [
                    "discord_user.non_field_errors"
                ],
                "type": "string",
                "description": "* `discord_user.non_field_errors` - discord_user.non_field_errors"
            },
            "Attr41bEnum": {
                "enum": [
                    "discord_user.user_id"
                ],
                "type": "string",
                "description": "* `discord_user.user_id` - discord_user.user_id"
            },
            "Attr4e0Enum": {
                "enum": [
                    "ip"
                ],
                "type": "string",
                "description": "* `ip` - ip"
            },
            "Attr5e4Enum": {
                "enum": [
                    "steam_user.username"
                ],
                "type": "string",
                "description": "* `steam_user.username` - steam_user.username"
            },
            "Attr5ebEnum": {
                "enum": [
                    "name"
                ],
                "type": "string",
                "description": "* `name` - name"
            },
            "Attr629Enum": {
                "enum": [
                    "profile_url"
                ],
                "type": "string",
                "description": "* `profile_url` - profile_url"
            },
            "Attr643Enum": {
                "enum": [
                    "interaction_user_id"
                ],
                "type": "string",
                "description": "* `interaction_user_id` - interaction_user_id"
            },
            "Attr73cEnum": {
                "enum": [
                    "avatar"
                ],
                "type": "string",
                "description": "* `avatar` - avatar"
            },
            "Attr752Enum": {
                "enum": [
                    "server_id"
                ],
                "type": "string",
                "description": "* `server_id` - server_id"
            },
            "Attr88aEnum": {
                "enum": [
                    "lobby_channel"
                ],
                "type": "string",
                "description": "* `lobby_channel` - lobby_channel"
            },
            "Attr8acEnum": {
                "enum": [
                    "cvars"
                ],
                "type": "string",
                "description": "* `cvars` - cvars"
            },
            "Attr8ecEnum": {
                "enum": [
                    "map_tag"
                ],
                "type": "string",
                "description": "* `map_tag` - map_tag"
            },
            "Attr959Enum": {
                "enum": [
                    "discord_user.username"
                ],
                "type": "string",
                "description": "* `discord_user.username` - discord_user.username"
            },
            "Attr9a5Enum": {
                "enum": [
                    "rcon_password"
                ],
                "type": "string",
                "description": "* `rcon_password` - rcon_password"
            },
            "Attr9d5Enum": {
                "enum": [
                    "guild_id"
                ],
                "type": "string",
                "description": "* `guild_id` - guild_id"
            },
            "Attr9e0Enum": {
                "enum": [
                    "is_public"
                ],
                "type": "string",
                "description": "* `is_public` - is_public"
            },
            "AttrA16Enum": {
                "enum": [
                    "status"
                ],
                "type": "string",
                "description": "* `status` - status"
            },
            "AttrAa4Enum": {
                "enum": [
                    "team1_channel"
                ],
                "type": "string",
                "description": "* `team1_channel` - team1_channel"
            },
            "AttrAd4Enum": {
                "enum": [
                    "username"
                ],
                "type": "string",
                "description": "* `username` - username"
            },
            "AttrB51Enum": {
                "enum": [
                    "steam_user.profile_url"
                ],
                "type": "string",
                "description": "* `steam_user.profile_url` - steam_user.profile_url"
            },
            "AttrC27Enum": {
                "enum": [
                    "steam_user.steamid64"
                ],
                "type": "string",
                "description": "* `steam_user.steamid64` - steam_user.steamid64"
            },
            "AttrD81Enum": {
                "enum": [
                    "non_field_errors"
                ],
                "type": "string",
                "description": "* `non_field_errors` - non_field_errors"
            },
            "AttrDa2Enum": {
                "enum": [
                    "steam_user.steamid32"
                ],
                "type": "string",
                "description": "* `steam_user.steamid32` - steam_user.steamid32"
            },
            "AttrE29Enum": {
                "enum": [
                    "guild"
                ],
                "type": "string",
                "description": "* `guild` - guild"
            },
            "AttrEdaEnum": {
                "enum": [
                    "maplist"
                ],
                "type": "string",
                "description": "* `maplist` - maplist"
            },
            "AttrF02Enum": {
                "enum": [
                    "message_id"
                ],
                "type": "string",
                "description": "* `message_id` - message_id"
            },
            "AttrFb1Enum": {
                "enum": [
                    "author_id"
                ],
                "type": "string",
                "description": "* `author_id` - author_id"
            },
            "ClientErrorEnum": {
                "enum": [
                    "client_error"
                ],
                "type": "string",
                "description": "* `client_error` - Client Error"
            },
            "Code023Enum": {
                "enum": [
                    "invalid",
                    "null"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `null` - null"
            },
            "Code238Enum": {
                "enum": [
                    "blank",
                    "invalid",
                    "max_length",
                    "null",
                    "null_characters_not_allowed",
                    "required",
                    "surrogate_characters_not_allowed"
                ],
                "type": "string",
                "description": "* `blank` - blank\n* `invalid` - invalid\n* `max_length` - max_length\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
            },
            "Code3abEnum": {
                "enum": [
                    "blank",
                    "invalid",
                    "null",
                    "null_characters_not_allowed",
                    "surrogate_characters_not_allowed"
                ],
                "type": "string",
                "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
            },
            "Code3f2Enum": {
                "enum": [
                    "invalid_choice",
                    "null"
                ],
                "type": "string",
                "description": "* `invalid_choice` - invalid_choice\n* `null` - null"
            },
            "Code548Enum": {
                "enum": [
                    "invalid",
                    "max_length",
                    "null_characters_not_allowed",
                    "surrogate_characters_not_allowed"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `max_length` - max_length\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
            },
            "Code6aeEnum": {
                "enum": [
                    "blank",
                    "invalid",
                    "max_length",
                    "null",
                    "null_characters_not_allowed",
                    "required",
                    "surrogate_characters_not_allowed",
                    "unique"
                ],
                "type": "string",
                "description": "* `blank` - blank\n* `invalid` - invalid\n* `max_length` - max_length\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed\n* `unique` - unique"
            },
            "Code84fEnum": {
                "enum": [
                    "blank",
                    "invalid",
                    "max_length",
                    "null_characters_not_allowed",
                    "surrogate_characters_not_allowed"
                ],
                "type": "string",
                "description": "* `blank` - blank\n* `invalid` - invalid\n* `max_length` - max_length\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
            },
            "Code937Enum": {
                "enum": [
                    "invalid",
                    "max_string_length",
                    "max_value",
                    "min_value",
                    "null",
                    "required"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `max_string_length` - max_string_length\n* `max_value` - max_value\n* `min_value` - min_value\n* `null` - null\n* `required` - required"
            },
            "Code948Enum": {
                "enum": [
                    "does_not_exist",
                    "incorrect_type"
                ],
                "type": "string",
                "description": "* `does_not_exist` - does_not_exist\n* `incorrect_type` - incorrect_type"
            },
            "CodeA3cEnum": {
                "enum": [
                    "blank",
                    "invalid",
                    "null",
                    "null_characters_not_allowed",
                    "required",
                    "surrogate_characters_not_allowed"
                ],
                "type": "string",
                "description": "* `blank` - blank\n* `invalid` - invalid\n* `null` - null\n* `null_characters_not_allowed` - null_characters_not_allowed\n* `required` - required\n* `surrogate_characters_not_allowed` - surrogate_characters_not_allowed"
            },
            "CodeCa6Enum": {
                "enum": [
                    "invalid",
                    "required"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `required` - required"
            },
            "CodeE7cEnum": {
                "enum": [
                    "invalid"
                ],
                "type": "string",
                "description": "* `invalid` - invalid"
            },
            "CodeF7eEnum": {
                "enum": [
                    "invalid",
                    "null",
                    "required"
                ],
                "type": "string",
                "description": "* `invalid` - invalid\n* `null` - null\n* `required` - required"
            },
            "CreateGuild": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "owner_username": {
                        "type": "string"
                    }
                },
                "required": [
                    "guild_id",
                    "name",
                    "owner_id",
                    "owner_username"
                ]
            },
            "CreateMatch": {
                "type": "object",
                "properties": {
                    "config_name": {
                        "type": "string"
                    },
                    "author_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "author_id",
                    "config_name",
                    "guild_id"
                ]
            },
            "DiscordUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "user_id",
                    "username"
                ]
            },
            "DiscordUsersCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscordUsersCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/DiscordUsersCreateUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/DiscordUsersCreateUsernameErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/DiscordUsersCreateNonFieldErrorsErrorComponent",
                        "user_id": "#/components/schemas/DiscordUsersCreateUserIdErrorComponent",
                        "username": "#/components/schemas/DiscordUsersCreateUsernameErrorComponent"
                    }
                }
            },
            "DiscordUsersCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscordUsersCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/DiscordUsersCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "DiscordUsersCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersCreateUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr12fEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersCreateUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAd4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiscordUsersCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "DiscordUsersDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "DiscordUsersListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "DiscordUsersPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscordUsersPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/DiscordUsersPartialUpdateUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/DiscordUsersPartialUpdateUsernameErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/DiscordUsersPartialUpdateNonFieldErrorsErrorComponent",
                        "user_id": "#/components/schemas/DiscordUsersPartialUpdateUserIdErrorComponent",
                        "username": "#/components/schemas/DiscordUsersPartialUpdateUsernameErrorComponent"
                    }
                }
            },
            "DiscordUsersPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscordUsersPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/DiscordUsersPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "DiscordUsersPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersPartialUpdateUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr12fEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersPartialUpdateUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAd4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiscordUsersPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "DiscordUsersRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "DiscordUsersUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscordUsersUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/DiscordUsersUpdateUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/DiscordUsersUpdateUsernameErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/DiscordUsersUpdateNonFieldErrorsErrorComponent",
                        "user_id": "#/components/schemas/DiscordUsersUpdateUserIdErrorComponent",
                        "username": "#/components/schemas/DiscordUsersUpdateUsernameErrorComponent"
                    }
                }
            },
            "DiscordUsersUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DiscordUsersUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/DiscordUsersUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "DiscordUsersUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersUpdateUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr12fEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersUpdateUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAd4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "DiscordUsersUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiscordUsersUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "Embed": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "color": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "footer": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "image": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "thumbnail": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "author": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmbedField"
                        }
                    }
                },
                "required": [
                    "fields"
                ]
            },
            "EmbedField": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "inline": {
                        "type": "boolean"
                    }
                }
            },
            "Error401": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode401Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error403": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode403Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error404": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode404Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error405": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode405Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error406": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode406Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error415": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode415Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "Error500": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ErrorCode500Enum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ErrorCode401Enum": {
                "enum": [
                    "authentication_failed",
                    "not_authenticated"
                ],
                "type": "string",
                "description": "* `authentication_failed` - Authentication Failed\n* `not_authenticated` - Not Authenticated"
            },
            "ErrorCode403Enum": {
                "enum": [
                    "permission_denied"
                ],
                "type": "string",
                "description": "* `permission_denied` - Permission Denied"
            },
            "ErrorCode404Enum": {
                "enum": [
                    "not_found"
                ],
                "type": "string",
                "description": "* `not_found` - Not Found"
            },
            "ErrorCode405Enum": {
                "enum": [
                    "method_not_allowed"
                ],
                "type": "string",
                "description": "* `method_not_allowed` - Method Not Allowed"
            },
            "ErrorCode406Enum": {
                "enum": [
                    "not_acceptable"
                ],
                "type": "string",
                "description": "* `not_acceptable` - Not Acceptable"
            },
            "ErrorCode415Enum": {
                "enum": [
                    "unsupported_media_type"
                ],
                "type": "string",
                "description": "* `unsupported_media_type` - Unsupported Media Type"
            },
            "ErrorCode500Enum": {
                "enum": [
                    "error"
                ],
                "type": "string",
                "description": "* `error` - Error"
            },
            "ErrorResponse401": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error401"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse403": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error403"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse404": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error404"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse405": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error405"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse406": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error406"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse415": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error415"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ErrorResponse500": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ServerErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error500"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "GameModeEnum": {
                "enum": [
                    "COMPETITIVE",
                    "WINGMAN",
                    "AIM"
                ],
                "type": "string",
                "description": "* `COMPETITIVE` - Competitive\n* `WINGMAN` - Wingman\n* `AIM` - Aim"
            },
            "Guild": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "guild_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "lobby_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team1_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team2_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "embed": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "guild_id",
                    "id",
                    "name",
                    "owner",
                    "updated_at"
                ]
            },
            "GuildsCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GuildsCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsCreateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsCreateGuildIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsCreateOwnerIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsCreateOwnerUsernameErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/GuildsCreateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/GuildsCreateNameErrorComponent",
                        "guild_id": "#/components/schemas/GuildsCreateGuildIdErrorComponent",
                        "owner_id": "#/components/schemas/GuildsCreateOwnerIdErrorComponent",
                        "owner_username": "#/components/schemas/GuildsCreateOwnerUsernameErrorComponent"
                    }
                }
            },
            "GuildsCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GuildsCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/GuildsCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "GuildsCreateGuildIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9d5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsCreateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsCreateOwnerIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/GuildsCreateOwnerIdErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsCreateOwnerIdErrorComponentAttrEnum": {
                "enum": [
                    "owner_id"
                ],
                "type": "string",
                "description": "* `owner_id` - owner_id"
            },
            "GuildsCreateOwnerUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/GuildsCreateOwnerUsernameErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsCreateOwnerUsernameErrorComponentAttrEnum": {
                "enum": [
                    "owner_username"
                ],
                "type": "string",
                "description": "* `owner_username` - owner_username"
            },
            "GuildsCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildsCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "GuildsDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "GuildsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "GuildsPartialUpdateEmbedErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/GuildsPartialUpdateEmbedErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateEmbedErrorComponentAttrEnum": {
                "enum": [
                    "embed"
                ],
                "type": "string",
                "description": "* `embed` - embed"
            },
            "GuildsPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateGuildIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateLobbyChannelErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateTeam1ChannelErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateTeam2ChannelErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateEmbedErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/GuildsPartialUpdateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/GuildsPartialUpdateNameErrorComponent",
                        "guild_id": "#/components/schemas/GuildsPartialUpdateGuildIdErrorComponent",
                        "lobby_channel": "#/components/schemas/GuildsPartialUpdateLobbyChannelErrorComponent",
                        "team1_channel": "#/components/schemas/GuildsPartialUpdateTeam1ChannelErrorComponent",
                        "team2_channel": "#/components/schemas/GuildsPartialUpdateTeam2ChannelErrorComponent",
                        "embed": "#/components/schemas/GuildsPartialUpdateEmbedErrorComponent"
                    }
                }
            },
            "GuildsPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GuildsPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/GuildsPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "GuildsPartialUpdateGuildIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9d5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateLobbyChannelErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr88aEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateTeam1ChannelErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAa4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateTeam2ChannelErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr160Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildsPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "GuildsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "GuildsUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GuildsUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsUpdateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsUpdateLobbyChannelErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsUpdateTeam1ChannelErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/GuildsUpdateTeam2ChannelErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/GuildsUpdateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/GuildsUpdateNameErrorComponent",
                        "lobby_channel": "#/components/schemas/GuildsUpdateLobbyChannelErrorComponent",
                        "team1_channel": "#/components/schemas/GuildsUpdateTeam1ChannelErrorComponent",
                        "team2_channel": "#/components/schemas/GuildsUpdateTeam2ChannelErrorComponent"
                    }
                }
            },
            "GuildsUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/GuildsUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/GuildsUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "GuildsUpdateLobbyChannelErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr88aEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsUpdateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsUpdateTeam1ChannelErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAa4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsUpdateTeam2ChannelErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr160Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "GuildsUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildsUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "InteractionUser": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id"
                ]
            },
            "Map": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tag": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name",
                    "tag",
                    "updated_at"
                ]
            },
            "MapBan": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "map",
                    "team",
                    "updated_at"
                ]
            },
            "MapPool": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "maps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        },
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "maps",
                    "name",
                    "updated_at"
                ]
            },
            "MapSidesEnum": {
                "enum": [
                    "team1_ct",
                    "team2_ct",
                    "team1_t",
                    "team2_t",
                    "knife"
                ],
                "type": "string",
                "description": "* `team1_ct` - team1_ct\n* `team2_ct` - team2_ct\n* `team1_t` - team1_t\n* `team2_t` - team2_t\n* `knife` - knife"
            },
            "MapsCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MapsCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsCreateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsCreateTagErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsCreateGuildErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MapsCreateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/MapsCreateNameErrorComponent",
                        "tag": "#/components/schemas/MapsCreateTagErrorComponent",
                        "guild": "#/components/schemas/MapsCreateGuildErrorComponent"
                    }
                }
            },
            "MapsCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MapsCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MapsCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MapsCreateGuildErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrE29Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsCreateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code6aeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsCreateTagErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr131Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code6aeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapsCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MapsDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MapsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MapsPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MapsPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsPartialUpdateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsPartialUpdateTagErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsPartialUpdateGuildErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MapsPartialUpdateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/MapsPartialUpdateNameErrorComponent",
                        "tag": "#/components/schemas/MapsPartialUpdateTagErrorComponent",
                        "guild": "#/components/schemas/MapsPartialUpdateGuildErrorComponent"
                    }
                }
            },
            "MapsPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MapsPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MapsPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MapsPartialUpdateGuildErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrE29Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsPartialUpdateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code6aeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsPartialUpdateTagErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr131Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code6aeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapsPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MapsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MapsUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MapsUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsUpdateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsUpdateTagErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MapsUpdateGuildErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MapsUpdateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/MapsUpdateNameErrorComponent",
                        "tag": "#/components/schemas/MapsUpdateTagErrorComponent",
                        "guild": "#/components/schemas/MapsUpdateGuildErrorComponent"
                    }
                }
            },
            "MapsUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MapsUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MapsUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MapsUpdateGuildErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrE29Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsUpdateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code6aeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsUpdateTagErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr131Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code6aeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MapsUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapsUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "Match": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchConfig"
                            }
                        ],
                        "readOnly": true
                    },
                    "team1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "team2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        },
                        "readOnly": true
                    },
                    "winner_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapBan"
                        },
                        "readOnly": true
                    },
                    "last_map_ban": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MapBan"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_picks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchMapSelected"
                        },
                        "readOnly": true
                    },
                    "last_map_pick": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchMapSelected"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "server": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Server"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "guild": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Guild"
                            }
                        ],
                        "readOnly": true
                    },
                    "matchzy_config_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "matchzy_config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchConfig"
                            }
                        ],
                        "readOnly": true
                    },
                    "webhook_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "connect_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "load_match_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "embed": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Embed"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "maplist": {
                        "nullable": true
                    },
                    "cvars": {
                        "nullable": true
                    },
                    "message_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "config",
                    "connect_command",
                    "created_at",
                    "embed",
                    "guild",
                    "id",
                    "last_map_ban",
                    "last_map_pick",
                    "load_match_command",
                    "map_bans",
                    "map_picks",
                    "maps",
                    "matchzy_config",
                    "matchzy_config_url",
                    "server",
                    "team1",
                    "team2",
                    "updated_at",
                    "webhook_url",
                    "winner_team"
                ]
            },
            "MatchBanMap": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    },
                    "map_tag": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id",
                    "map_tag"
                ]
            },
            "MatchBanMapResult": {
                "type": "object",
                "properties": {
                    "match": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Match"
                            }
                        ],
                        "readOnly": true
                    },
                    "banned_map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "next_ban_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps_left": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "map_bans_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "banned_map",
                    "map_bans_count",
                    "maps_left",
                    "match",
                    "next_ban_team"
                ]
            },
            "MatchConfig": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "map_pool": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MapPool"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "game_mode": {
                        "$ref": "#/components/schemas/GameModeEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeCa0Enum"
                    },
                    "map_sides": {
                        "nullable": true
                    },
                    "clinch_series": {
                        "type": "boolean"
                    },
                    "max_players": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "cvars": {
                        "nullable": true
                    },
                    "shuffle_teams": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "map_pool",
                    "name",
                    "updated_at"
                ]
            },
            "MatchMapSelected": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "map",
                    "team",
                    "updated_at"
                ]
            },
            "MatchPickMap": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    },
                    "map_tag": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id",
                    "map_tag"
                ]
            },
            "MatchPickMapResult": {
                "type": "object",
                "properties": {
                    "picked_map": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Map"
                            }
                        ],
                        "readOnly": true
                    },
                    "next_pick_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps_left": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "map_picks_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "map_picks_count",
                    "maps_left",
                    "next_pick_team",
                    "picked_map"
                ]
            },
            "MatchPlayerJoin": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    },
                    "team": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id"
                ]
            },
            "MatchPlayerLeave": {
                "type": "object",
                "properties": {
                    "interaction_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id"
                ]
            },
            "MatchSelectCaptain": {
                "type": "object",
                "properties": {
                    "team": {
                        "type": "string"
                    },
                    "interaction_user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "interaction_user_id",
                    "team"
                ]
            },
            "MatchUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeCa0Enum"
                    },
                    "team1_id": {
                        "type": "string"
                    },
                    "team2_id": {
                        "type": "string"
                    },
                    "map_sides": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapSidesEnum"
                        }
                    },
                    "clinch_series": {
                        "type": "boolean"
                    },
                    "cvars": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "message_id": {
                        "type": "string"
                    },
                    "author_id": {
                        "type": "string"
                    },
                    "server_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    }
                }
            },
            "MatchesBanCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesBanCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesBanCreateInteractionUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesBanCreateMapTagErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesBanCreateNonFieldErrorsErrorComponent",
                        "interaction_user_id": "#/components/schemas/MatchesBanCreateInteractionUserIdErrorComponent",
                        "map_tag": "#/components/schemas/MatchesBanCreateMapTagErrorComponent"
                    }
                }
            },
            "MatchesBanCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesBanCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesBanCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesBanCreateInteractionUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr643Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesBanCreateMapTagErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8ecEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesBanCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesBanCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesBanCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesBansListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesCaptainCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesCaptainCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesCaptainCreateTeamErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesCaptainCreateInteractionUserIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesCaptainCreateNonFieldErrorsErrorComponent",
                        "team": "#/components/schemas/MatchesCaptainCreateTeamErrorComponent",
                        "interaction_user_id": "#/components/schemas/MatchesCaptainCreateInteractionUserIdErrorComponent"
                    }
                }
            },
            "MatchesCaptainCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesCaptainCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesCaptainCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesCaptainCreateInteractionUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr643Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCaptainCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCaptainCreateTeamErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr247Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCaptainCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesCaptainCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesConfigRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesCreateAuthorIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrFb1Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCreateConfigNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesCreateConfigNameErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCreateConfigNameErrorComponentAttrEnum": {
                "enum": [
                    "config_name"
                ],
                "type": "string",
                "description": "* `config_name` - config_name"
            },
            "MatchesCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesCreateConfigNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesCreateAuthorIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesCreateServerIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesCreateGuildIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesCreateNonFieldErrorsErrorComponent",
                        "config_name": "#/components/schemas/MatchesCreateConfigNameErrorComponent",
                        "author_id": "#/components/schemas/MatchesCreateAuthorIdErrorComponent",
                        "server_id": "#/components/schemas/MatchesCreateServerIdErrorComponent",
                        "guild_id": "#/components/schemas/MatchesCreateGuildIdErrorComponent"
                    }
                }
            },
            "MatchesCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesCreateGuildIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9d5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCreateServerIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr752Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesJoinCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesJoinCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesJoinCreateInteractionUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesJoinCreateTeamErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesJoinCreateNonFieldErrorsErrorComponent",
                        "interaction_user_id": "#/components/schemas/MatchesJoinCreateInteractionUserIdErrorComponent",
                        "team": "#/components/schemas/MatchesJoinCreateTeamErrorComponent"
                    }
                }
            },
            "MatchesJoinCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesJoinCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesJoinCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesJoinCreateInteractionUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr643Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesJoinCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesJoinCreateTeamErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr247Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesJoinCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesJoinCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesLeaveCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesLeaveCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesLeaveCreateInteractionUserIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesLeaveCreateNonFieldErrorsErrorComponent",
                        "interaction_user_id": "#/components/schemas/MatchesLeaveCreateInteractionUserIdErrorComponent"
                    }
                }
            },
            "MatchesLeaveCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesLeaveCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesLeaveCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesLeaveCreateInteractionUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr643Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLeaveCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLeaveCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesLeaveCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesLoadCreateCvarsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8acEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLoadCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesLoadCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesLoadCreateStatusErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesLoadCreateMaplistErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesLoadCreateCvarsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesLoadCreateMessageIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesLoadCreateNonFieldErrorsErrorComponent",
                        "status": "#/components/schemas/MatchesLoadCreateStatusErrorComponent",
                        "maplist": "#/components/schemas/MatchesLoadCreateMaplistErrorComponent",
                        "cvars": "#/components/schemas/MatchesLoadCreateCvarsErrorComponent",
                        "message_id": "#/components/schemas/MatchesLoadCreateMessageIdErrorComponent"
                    }
                }
            },
            "MatchesLoadCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesLoadCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesLoadCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesLoadCreateMaplistErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrEdaEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLoadCreateMessageIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrF02Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLoadCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLoadCreateStatusErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrA16Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesLoadCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesLoadCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesPartialUpdateCvarsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8acEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesPartialUpdateStatusErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesPartialUpdateMaplistErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesPartialUpdateCvarsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesPartialUpdateMessageIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesPartialUpdateNonFieldErrorsErrorComponent",
                        "status": "#/components/schemas/MatchesPartialUpdateStatusErrorComponent",
                        "maplist": "#/components/schemas/MatchesPartialUpdateMaplistErrorComponent",
                        "cvars": "#/components/schemas/MatchesPartialUpdateCvarsErrorComponent",
                        "message_id": "#/components/schemas/MatchesPartialUpdateMessageIdErrorComponent"
                    }
                }
            },
            "MatchesPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesPartialUpdateMaplistErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrEdaEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPartialUpdateMessageIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrF02Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPartialUpdateStatusErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrA16Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesPickCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesPickCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesPickCreateInteractionUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesPickCreateMapTagErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesPickCreateNonFieldErrorsErrorComponent",
                        "interaction_user_id": "#/components/schemas/MatchesPickCreateInteractionUserIdErrorComponent",
                        "map_tag": "#/components/schemas/MatchesPickCreateMapTagErrorComponent"
                    }
                }
            },
            "MatchesPickCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesPickCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesPickCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesPickCreateInteractionUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr643Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPickCreateMapTagErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8ecEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPickCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesPickCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesPickCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesPicksListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesRecreateCreateCvarsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8acEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesRecreateCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesRecreateCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesRecreateCreateStatusErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesRecreateCreateMaplistErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesRecreateCreateCvarsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesRecreateCreateMessageIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesRecreateCreateNonFieldErrorsErrorComponent",
                        "status": "#/components/schemas/MatchesRecreateCreateStatusErrorComponent",
                        "maplist": "#/components/schemas/MatchesRecreateCreateMaplistErrorComponent",
                        "cvars": "#/components/schemas/MatchesRecreateCreateCvarsErrorComponent",
                        "message_id": "#/components/schemas/MatchesRecreateCreateMessageIdErrorComponent"
                    }
                }
            },
            "MatchesRecreateCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesRecreateCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesRecreateCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesRecreateCreateMaplistErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrEdaEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesRecreateCreateMessageIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrF02Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesRecreateCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesRecreateCreateStatusErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrA16Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesRecreateCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesRecreateCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesShuffleCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesShuffleCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesShuffleCreateInteractionUserIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesShuffleCreateNonFieldErrorsErrorComponent",
                        "interaction_user_id": "#/components/schemas/MatchesShuffleCreateInteractionUserIdErrorComponent"
                    }
                }
            },
            "MatchesShuffleCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesShuffleCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesShuffleCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesShuffleCreateInteractionUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr643Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeA3cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesShuffleCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesShuffleCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesShuffleCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesUpdateAuthorIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrFb1Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateClinchSeriesErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateClinchSeriesErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code023Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateClinchSeriesErrorComponentAttrEnum": {
                "enum": [
                    "clinch_series"
                ],
                "type": "string",
                "description": "* `clinch_series` - clinch_series"
            },
            "MatchesUpdateCvarsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8acEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MatchesUpdateCvarsErrorComponentCodeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateCvarsErrorComponentCodeEnum": {
                "enum": [
                    "not_a_dict",
                    "null"
                ],
                "type": "string",
                "description": "* `not_a_dict` - not_a_dict\n* `null` - null"
            },
            "MatchesUpdateCvarsKEYErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateCvarsKEYErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MatchesUpdateCvarsKEYErrorComponentCodeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateCvarsKEYErrorComponentAttrEnum": {
                "enum": [
                    "cvars.KEY"
                ],
                "type": "string",
                "description": "* `cvars.KEY` - cvars.KEY"
            },
            "MatchesUpdateCvarsKEYErrorComponentCodeEnum": {
                "enum": [
                    "required"
                ],
                "type": "string",
                "description": "* `required` - required"
            },
            "MatchesUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateStatusErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateTypeErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateTeam1IdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateTeam2IdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateMapSidesErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateMapSidesINDEXErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateClinchSeriesErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateCvarsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateCvarsKEYErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateMessageIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateAuthorIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateServerIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesUpdateGuildIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesUpdateNonFieldErrorsErrorComponent",
                        "status": "#/components/schemas/MatchesUpdateStatusErrorComponent",
                        "type": "#/components/schemas/MatchesUpdateTypeErrorComponent",
                        "team1_id": "#/components/schemas/MatchesUpdateTeam1IdErrorComponent",
                        "team2_id": "#/components/schemas/MatchesUpdateTeam2IdErrorComponent",
                        "map_sides": "#/components/schemas/MatchesUpdateMapSidesErrorComponent",
                        "map_sides.INDEX": "#/components/schemas/MatchesUpdateMapSidesINDEXErrorComponent",
                        "clinch_series": "#/components/schemas/MatchesUpdateClinchSeriesErrorComponent",
                        "cvars": "#/components/schemas/MatchesUpdateCvarsErrorComponent",
                        "cvars.KEY": "#/components/schemas/MatchesUpdateCvarsKEYErrorComponent",
                        "message_id": "#/components/schemas/MatchesUpdateMessageIdErrorComponent",
                        "author_id": "#/components/schemas/MatchesUpdateAuthorIdErrorComponent",
                        "server_id": "#/components/schemas/MatchesUpdateServerIdErrorComponent",
                        "guild_id": "#/components/schemas/MatchesUpdateGuildIdErrorComponent"
                    }
                }
            },
            "MatchesUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesUpdateGuildIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9d5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateMapSidesErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateMapSidesErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/MatchesUpdateMapSidesErrorComponentCodeEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateMapSidesErrorComponentAttrEnum": {
                "enum": [
                    "map_sides"
                ],
                "type": "string",
                "description": "* `map_sides` - map_sides"
            },
            "MatchesUpdateMapSidesErrorComponentCodeEnum": {
                "enum": [
                    "not_a_list",
                    "null"
                ],
                "type": "string",
                "description": "* `not_a_list` - not_a_list\n* `null` - null"
            },
            "MatchesUpdateMapSidesINDEXErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateMapSidesINDEXErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateMapSidesINDEXErrorComponentAttrEnum": {
                "enum": [
                    "map_sides.INDEX"
                ],
                "type": "string",
                "description": "* `map_sides.INDEX` - map_sides.INDEX"
            },
            "MatchesUpdateMessageIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrF02Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateServerIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr752Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateStatusErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrA16Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateTeam1IdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateTeam1IdErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateTeam1IdErrorComponentAttrEnum": {
                "enum": [
                    "team1_id"
                ],
                "type": "string",
                "description": "* `team1_id` - team1_id"
            },
            "MatchesUpdateTeam2IdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateTeam2IdErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateTeam2IdErrorComponentAttrEnum": {
                "enum": [
                    "team2_id"
                ],
                "type": "string",
                "description": "* `team2_id` - team2_id"
            },
            "MatchesUpdateTypeErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/MatchesUpdateTypeErrorComponentAttrEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesUpdateTypeErrorComponentAttrEnum": {
                "enum": [
                    "type"
                ],
                "type": "string",
                "description": "* `type` - type"
            },
            "MatchesUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "MatchesWebhookCreateCvarsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr8acEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesWebhookCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesWebhookCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesWebhookCreateStatusErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesWebhookCreateMaplistErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesWebhookCreateCvarsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/MatchesWebhookCreateMessageIdErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/MatchesWebhookCreateNonFieldErrorsErrorComponent",
                        "status": "#/components/schemas/MatchesWebhookCreateStatusErrorComponent",
                        "maplist": "#/components/schemas/MatchesWebhookCreateMaplistErrorComponent",
                        "cvars": "#/components/schemas/MatchesWebhookCreateCvarsErrorComponent",
                        "message_id": "#/components/schemas/MatchesWebhookCreateMessageIdErrorComponent"
                    }
                }
            },
            "MatchesWebhookCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/MatchesWebhookCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/MatchesWebhookCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "MatchesWebhookCreateMaplistErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrEdaEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesWebhookCreateMessageIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrF02Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesWebhookCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesWebhookCreateStatusErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrA16Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3f2Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "MatchesWebhookCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchesWebhookCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "PaginatedDiscordUserList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DiscordUser"
                        }
                    }
                }
            },
            "PaginatedGuildList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Guild"
                        }
                    }
                }
            },
            "PaginatedMapBanList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapBan"
                        }
                    }
                }
            },
            "PaginatedMapList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        }
                    }
                }
            },
            "PaginatedMatchList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Match"
                        }
                    }
                }
            },
            "PaginatedMatchMapSelectedList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchMapSelected"
                        }
                    }
                }
            },
            "PaginatedPlayerList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Player"
                        }
                    }
                }
            },
            "PaginatedServerList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Server"
                        }
                    }
                }
            },
            "PaginatedSteamUserList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SteamUser"
                        }
                    }
                }
            },
            "PaginatedTeamList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Team"
                        }
                    }
                }
            },
            "ParseError": {
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/ParseErrorCodeEnum"
                    },
                    "detail": {
                        "type": "string"
                    },
                    "attr": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ParseErrorCodeEnum": {
                "enum": [
                    "parse_error"
                ],
                "type": "string",
                "description": "* `parse_error` - Parse Error"
            },
            "ParseErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ClientErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParseError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "PatchedDiscordUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedGuild": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "guild_id": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "lobby_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team1_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "team2_channel": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "embed": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PatchedMap": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "tag": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PatchedMatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchConfig"
                            }
                        ],
                        "readOnly": true
                    },
                    "team1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "team2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true
                    },
                    "maps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Map"
                        },
                        "readOnly": true
                    },
                    "winner_team": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Team"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MapBan"
                        },
                        "readOnly": true
                    },
                    "last_map_ban": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MapBan"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "map_picks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MatchMapSelected"
                        },
                        "readOnly": true
                    },
                    "last_map_pick": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchMapSelected"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DiscordUser"
                            }
                        ],
                        "readOnly": true
                    },
                    "server": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Server"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "guild": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Guild"
                            }
                        ],
                        "readOnly": true
                    },
                    "matchzy_config_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "matchzy_config": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MatchConfig"
                            }
                        ],
                        "readOnly": true
                    },
                    "webhook_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "connect_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "load_match_command": {
                        "type": "string",
                        "readOnly": true
                    },
                    "embed": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Embed"
                            }
                        ],
                        "readOnly": true,
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "maplist": {
                        "nullable": true
                    },
                    "cvars": {
                        "nullable": true
                    },
                    "message_id": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedPlayer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discord_user": {
                        "$ref": "#/components/schemas/DiscordUser"
                    },
                    "steam_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        ],
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedServer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "ip": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "rcon_password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    },
                    "join_url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedSteamUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "steamid64": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "steamid32": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "profile_url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Player": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discord_user": {
                        "$ref": "#/components/schemas/DiscordUser"
                    },
                    "steam_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SteamUser"
                            }
                        ],
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "discord_user",
                    "id",
                    "steam_user",
                    "updated_at"
                ]
            },
            "PlayersCreateDiscordUserNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr383Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeF7eEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateDiscordUserUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr41bEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateDiscordUserUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr959Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlayersCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateDiscordUserNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateDiscordUserUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateDiscordUserUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateSteamUserNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateSteamUserUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateSteamUserSteamid64ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateSteamUserSteamid32ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateSteamUserProfileUrlErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersCreateSteamUserAvatarErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/PlayersCreateNonFieldErrorsErrorComponent",
                        "discord_user.non_field_errors": "#/components/schemas/PlayersCreateDiscordUserNonFieldErrorsErrorComponent",
                        "discord_user.user_id": "#/components/schemas/PlayersCreateDiscordUserUserIdErrorComponent",
                        "discord_user.username": "#/components/schemas/PlayersCreateDiscordUserUsernameErrorComponent",
                        "steam_user.non_field_errors": "#/components/schemas/PlayersCreateSteamUserNonFieldErrorsErrorComponent",
                        "steam_user.username": "#/components/schemas/PlayersCreateSteamUserUsernameErrorComponent",
                        "steam_user.steamid64": "#/components/schemas/PlayersCreateSteamUserSteamid64ErrorComponent",
                        "steam_user.steamid32": "#/components/schemas/PlayersCreateSteamUserSteamid32ErrorComponent",
                        "steam_user.profile_url": "#/components/schemas/PlayersCreateSteamUserProfileUrlErrorComponent",
                        "steam_user.avatar": "#/components/schemas/PlayersCreateSteamUserAvatarErrorComponent"
                    }
                }
            },
            "PlayersCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlayersCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/PlayersCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "PlayersCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateSteamUserAvatarErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr02cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateSteamUserNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr314Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeCa6Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateSteamUserProfileUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrB51Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateSteamUserSteamid32ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrDa2Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateSteamUserSteamid64ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrC27Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateSteamUserUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5e4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlayersCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "PlayersDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "PlayersListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "PlayersPartialUpdateDiscordUserNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr383Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeF7eEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateDiscordUserUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr41bEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateDiscordUserUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr959Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateDiscordUserNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateDiscordUserUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateDiscordUserUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateSteamUserNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateSteamUserUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateSteamUserSteamid64ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateSteamUserSteamid32ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateSteamUserProfileUrlErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateSteamUserAvatarErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/PlayersPartialUpdateNonFieldErrorsErrorComponent",
                        "discord_user.non_field_errors": "#/components/schemas/PlayersPartialUpdateDiscordUserNonFieldErrorsErrorComponent",
                        "discord_user.user_id": "#/components/schemas/PlayersPartialUpdateDiscordUserUserIdErrorComponent",
                        "discord_user.username": "#/components/schemas/PlayersPartialUpdateDiscordUserUsernameErrorComponent",
                        "steam_user.non_field_errors": "#/components/schemas/PlayersPartialUpdateSteamUserNonFieldErrorsErrorComponent",
                        "steam_user.username": "#/components/schemas/PlayersPartialUpdateSteamUserUsernameErrorComponent",
                        "steam_user.steamid64": "#/components/schemas/PlayersPartialUpdateSteamUserSteamid64ErrorComponent",
                        "steam_user.steamid32": "#/components/schemas/PlayersPartialUpdateSteamUserSteamid32ErrorComponent",
                        "steam_user.profile_url": "#/components/schemas/PlayersPartialUpdateSteamUserProfileUrlErrorComponent",
                        "steam_user.avatar": "#/components/schemas/PlayersPartialUpdateSteamUserAvatarErrorComponent"
                    }
                }
            },
            "PlayersPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlayersPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/PlayersPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "PlayersPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateSteamUserAvatarErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr02cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateSteamUserNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr314Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeCa6Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateSteamUserProfileUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrB51Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateSteamUserSteamid32ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrDa2Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateSteamUserSteamid64ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrC27Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateSteamUserUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5e4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlayersPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "PlayersRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "PlayersUpdateDiscordUserNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr383Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeF7eEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateDiscordUserUserIdErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr41bEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateDiscordUserUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr959Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlayersUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateDiscordUserNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateDiscordUserUserIdErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateDiscordUserUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateSteamUserNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateSteamUserUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateSteamUserSteamid64ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateSteamUserSteamid32ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateSteamUserProfileUrlErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/PlayersUpdateSteamUserAvatarErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/PlayersUpdateNonFieldErrorsErrorComponent",
                        "discord_user.non_field_errors": "#/components/schemas/PlayersUpdateDiscordUserNonFieldErrorsErrorComponent",
                        "discord_user.user_id": "#/components/schemas/PlayersUpdateDiscordUserUserIdErrorComponent",
                        "discord_user.username": "#/components/schemas/PlayersUpdateDiscordUserUsernameErrorComponent",
                        "steam_user.non_field_errors": "#/components/schemas/PlayersUpdateSteamUserNonFieldErrorsErrorComponent",
                        "steam_user.username": "#/components/schemas/PlayersUpdateSteamUserUsernameErrorComponent",
                        "steam_user.steamid64": "#/components/schemas/PlayersUpdateSteamUserSteamid64ErrorComponent",
                        "steam_user.steamid32": "#/components/schemas/PlayersUpdateSteamUserSteamid32ErrorComponent",
                        "steam_user.profile_url": "#/components/schemas/PlayersUpdateSteamUserProfileUrlErrorComponent",
                        "steam_user.avatar": "#/components/schemas/PlayersUpdateSteamUserAvatarErrorComponent"
                    }
                }
            },
            "PlayersUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/PlayersUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/PlayersUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "PlayersUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateSteamUserAvatarErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr02cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateSteamUserNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr314Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeCa6Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateSteamUserProfileUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrB51Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateSteamUserSteamid32ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrDa2Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateSteamUserSteamid64ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrC27Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateSteamUserUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5e4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "PlayersUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlayersUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "SchemaRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "Server": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "ip": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "port": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 100
                    },
                    "is_public": {
                        "type": "boolean"
                    },
                    "rcon_password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "guild": {
                        "type": "string",
                        "nullable": true
                    },
                    "join_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "ip",
                    "join_url",
                    "name",
                    "port"
                ]
            },
            "ServerErrorEnum": {
                "enum": [
                    "server_error"
                ],
                "type": "string",
                "description": "* `server_error` - Server Error"
            },
            "ServersCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ServersCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreateIpErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreatePortErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreatePasswordErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreateIsPublicErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreateRconPasswordErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersCreateGuildErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ServersCreateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/ServersCreateNameErrorComponent",
                        "ip": "#/components/schemas/ServersCreateIpErrorComponent",
                        "port": "#/components/schemas/ServersCreatePortErrorComponent",
                        "password": "#/components/schemas/ServersCreatePasswordErrorComponent",
                        "is_public": "#/components/schemas/ServersCreateIsPublicErrorComponent",
                        "rcon_password": "#/components/schemas/ServersCreateRconPasswordErrorComponent",
                        "guild": "#/components/schemas/ServersCreateGuildErrorComponent"
                    }
                }
            },
            "ServersCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ServersCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ServersCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersCreateGuildErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrE29Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreateIpErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr4e0Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreateIsPublicErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9e0Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code023Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreatePasswordErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr080Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreatePortErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr0a3Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code937Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreateRconPasswordErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9a5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServersCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ServersDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersJoinRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateIpErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdatePortErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdatePasswordErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateIsPublicErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateRconPasswordErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateGuildErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ServersPartialUpdateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/ServersPartialUpdateNameErrorComponent",
                        "ip": "#/components/schemas/ServersPartialUpdateIpErrorComponent",
                        "port": "#/components/schemas/ServersPartialUpdatePortErrorComponent",
                        "password": "#/components/schemas/ServersPartialUpdatePasswordErrorComponent",
                        "is_public": "#/components/schemas/ServersPartialUpdateIsPublicErrorComponent",
                        "rcon_password": "#/components/schemas/ServersPartialUpdateRconPasswordErrorComponent",
                        "guild": "#/components/schemas/ServersPartialUpdateGuildErrorComponent"
                    }
                }
            },
            "ServersPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ServersPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ServersPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersPartialUpdateGuildErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrE29Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdateIpErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr4e0Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdateIsPublicErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9e0Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code023Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdatePasswordErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr080Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdatePortErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr0a3Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code937Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdateRconPasswordErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9a5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServersPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "ServersRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ServersUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdateNameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdateIpErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdatePortErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdatePasswordErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdateIsPublicErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdateRconPasswordErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/ServersUpdateGuildErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/ServersUpdateNonFieldErrorsErrorComponent",
                        "name": "#/components/schemas/ServersUpdateNameErrorComponent",
                        "ip": "#/components/schemas/ServersUpdateIpErrorComponent",
                        "port": "#/components/schemas/ServersUpdatePortErrorComponent",
                        "password": "#/components/schemas/ServersUpdatePasswordErrorComponent",
                        "is_public": "#/components/schemas/ServersUpdateIsPublicErrorComponent",
                        "rcon_password": "#/components/schemas/ServersUpdateRconPasswordErrorComponent",
                        "guild": "#/components/schemas/ServersUpdateGuildErrorComponent"
                    }
                }
            },
            "ServersUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ServersUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/ServersUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "ServersUpdateGuildErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrE29Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code948Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdateIpErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr4e0Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdateIsPublicErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9e0Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code023Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdateNameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr5ebEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdatePasswordErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr080Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code548Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdatePortErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr0a3Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code937Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdateRconPasswordErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr9a5Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code3abEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "ServersUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ServersUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "StatusEnum": {
                "enum": [
                    "CREATED",
                    "CAPTAINS_SELECT",
                    "MAP_VETO",
                    "READY_TO_LOAD",
                    "LOADED",
                    "LIVE",
                    "FINISHED",
                    "CANCELLED"
                ],
                "type": "string",
                "description": "* `CREATED` - Created\n* `CAPTAINS_SELECT` - Captains Select\n* `MAP_VETO` - Map Veto\n* `READY_TO_LOAD` - Ready To Load\n* `LOADED` - Loaded\n* `LIVE` - Live\n* `FINISHED` - Finished\n* `CANCELLED` - Cancelled"
            },
            "SteamUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "steamid64": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "steamid32": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "profile_url": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "username"
                ]
            },
            "SteamUsersCreateAvatarErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr73cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersCreateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateSteamid64ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateSteamid32ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateProfileUrlErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateAvatarErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/SteamUsersCreateNonFieldErrorsErrorComponent",
                        "username": "#/components/schemas/SteamUsersCreateUsernameErrorComponent",
                        "steamid64": "#/components/schemas/SteamUsersCreateSteamid64ErrorComponent",
                        "steamid32": "#/components/schemas/SteamUsersCreateSteamid32ErrorComponent",
                        "profile_url": "#/components/schemas/SteamUsersCreateProfileUrlErrorComponent",
                        "avatar": "#/components/schemas/SteamUsersCreateAvatarErrorComponent"
                    }
                }
            },
            "SteamUsersCreateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SteamUsersCreateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/SteamUsersCreateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "SteamUsersCreateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersCreateProfileUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr629Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersCreateSteamid32ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr2b6Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersCreateSteamid64ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr14cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersCreateUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAd4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersCreateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SteamUsersCreateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "SteamUsersDestroyErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "SteamUsersListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "SteamUsersPartialUpdateAvatarErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr73cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersPartialUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateSteamid64ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateSteamid32ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateProfileUrlErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateAvatarErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/SteamUsersPartialUpdateNonFieldErrorsErrorComponent",
                        "username": "#/components/schemas/SteamUsersPartialUpdateUsernameErrorComponent",
                        "steamid64": "#/components/schemas/SteamUsersPartialUpdateSteamid64ErrorComponent",
                        "steamid32": "#/components/schemas/SteamUsersPartialUpdateSteamid32ErrorComponent",
                        "profile_url": "#/components/schemas/SteamUsersPartialUpdateProfileUrlErrorComponent",
                        "avatar": "#/components/schemas/SteamUsersPartialUpdateAvatarErrorComponent"
                    }
                }
            },
            "SteamUsersPartialUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SteamUsersPartialUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/SteamUsersPartialUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "SteamUsersPartialUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersPartialUpdateProfileUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr629Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersPartialUpdateSteamid32ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr2b6Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersPartialUpdateSteamid64ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr14cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersPartialUpdateUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAd4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersPartialUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SteamUsersPartialUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "SteamUsersRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "SteamUsersUpdateAvatarErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr73cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersUpdateError": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateNonFieldErrorsErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateUsernameErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateSteamid64ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateSteamid32ErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateProfileUrlErrorComponent"
                    },
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateAvatarErrorComponent"
                    }
                ],
                "discriminator": {
                    "propertyName": "attr",
                    "mapping": {
                        "non_field_errors": "#/components/schemas/SteamUsersUpdateNonFieldErrorsErrorComponent",
                        "username": "#/components/schemas/SteamUsersUpdateUsernameErrorComponent",
                        "steamid64": "#/components/schemas/SteamUsersUpdateSteamid64ErrorComponent",
                        "steamid32": "#/components/schemas/SteamUsersUpdateSteamid32ErrorComponent",
                        "profile_url": "#/components/schemas/SteamUsersUpdateProfileUrlErrorComponent",
                        "avatar": "#/components/schemas/SteamUsersUpdateAvatarErrorComponent"
                    }
                }
            },
            "SteamUsersUpdateErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/SteamUsersUpdateValidationError"
                    },
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "validation_error": "#/components/schemas/SteamUsersUpdateValidationError",
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "SteamUsersUpdateNonFieldErrorsErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrD81Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/CodeE7cEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersUpdateProfileUrlErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr629Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersUpdateSteamid32ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr2b6Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersUpdateSteamid64ErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/Attr14cEnum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code84fEnum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersUpdateUsernameErrorComponent": {
                "type": "object",
                "properties": {
                    "attr": {
                        "$ref": "#/components/schemas/AttrAd4Enum"
                    },
                    "code": {
                        "$ref": "#/components/schemas/Code238Enum"
                    },
                    "detail": {
                        "type": "string"
                    }
                },
                "required": [
                    "attr",
                    "code",
                    "detail"
                ]
            },
            "SteamUsersUpdateValidationError": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ValidationErrorEnum"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SteamUsersUpdateError"
                        }
                    }
                },
                "required": [
                    "errors",
                    "type"
                ]
            },
            "Team": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "players": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Player"
                        },
                        "readOnly": true
                    },
                    "leader": {
                        "$ref": "#/components/schemas/Player"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "leader",
                    "name",
                    "players",
                    "updated_at"
                ]
            },
            "TeamsListErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "TeamsRetrieveErrorResponse400": {
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/ParseErrorResponse"
                    }
                ],
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "client_error": "#/components/schemas/ParseErrorResponse"
                    }
                }
            },
            "TypeCa0Enum": {
                "enum": [
                    "BO1",
                    "BO3",
                    "BO5"
                ],
                "type": "string",
                "description": "* `BO1` - Bo1\n* `BO3` - Bo3\n* `BO5` - Bo5"
            },
            "UpdateGuild": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "lobby_channel": {
                        "type": "string"
                    },
                    "team1_channel": {
                        "type": "string"
                    },
                    "team2_channel": {
                        "type": "string"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "player": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Player"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "player",
                    "username"
                ]
            },
            "ValidationErrorEnum": {
                "enum": [
                    "validation_error"
                ],
                "type": "string",
                "description": "* `validation_error` - Validation Error"
            }
        },
        "securitySchemes": {
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"Token\""
            }
        }
    }
}