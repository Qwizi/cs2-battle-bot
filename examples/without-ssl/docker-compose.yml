services:
  app:
    image: qwizii/cs2-battle-bot-api:v0.0.34
    container_name: cs2_battle_bot_api_prod
    command: sh -c "gunicorn cs2_battle_bot.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - "8000"
    volumes:
      - static_volume:/app/staticfiles/
    env_file:
      - .env.example
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - cs2-battle-bot-network
  db:
    image: postgres:15.1
    container_name: cs2_battle_bot_api_db_prod
    environment:
      - POSTGRES_DB=cs2_db
      - POSTGRES_USER=cs2_user
      - POSTGRES_PASSWORD=cs2_password
    restart: unless-stopped
    expose:
      - 5435
    healthcheck:
      test: "exit 0"
    networks:
      - cs2-battle-bot-network
    volumes:
      - ./pgdata:/var/lib/postgresql/data
  redis:
    image: "redis:alpine"
    container_name: cs2_battle_bot_api_redis_prod
    restart: unless-stopped
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    env_file:
      - .env.example
    expose:
      - 6379
    networks:
      - cs2-battle-bot-network
  nginx:
    image: nginx:stable-alpine3.17-slim
    container_name: cs2_battle_bot_api_nginx_prod
    ports:
      - 8000:80
    volumes:
      - static_volume:/app/staticfiles/
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - cs2-battle-bot-network
  bot:
    image: qwizii/cs2-battle-bot:v0.0.10
    container_name: cs2_battle_bot
    env_file:
      - .env.example
    networks:
      - cs2-battle-bot-network

networks:
  cs2-battle-bot-network:
    external: true

volumes:
  static_volume:
  pgdata: